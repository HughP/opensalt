<?php

namespace CftfBundle\Repository;

use CftfBundle\Entity\LsAssociation;
use CftfBundle\Entity\LsDocAttribute;
use CftfBundle\Entity\LsItem;

/**
 * LsItemRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class LsItemRepository extends \Doctrine\ORM\EntityRepository
{
    public function removeAssociation(LsAssociation $association) {
        $this->_em->getRepository(LsAssociation::class)->removeAssociation($association);
    }

    public function removeChild(LsItem $parent, LsItem $child) {
        foreach ($child->getAssociations() as $association) {
            if ($association->getType() === LsAssociation::CHILD_OF
                && $association->getDestinationLsItem()->getId() === $parent->getId()) {
                $this->removeAssociation($association);
            }
        }
    }

    public function createGradeSelectListQueryBuilder() {
        return $this->createQueryBuilder('i')
            ->join('i.associations', 'a', 'WITH', 'a.type = :isChild')
            ->leftJoin('a.destinationLsItem', 'dest')
            ->leftJoin('dest.associations', 'desta', 'WITH', 'desta.type = :isChild')
            ->leftJoin('desta.destinationLsItem', 'dest2')
            ->join('a.lsDoc', 'd')
            ->join('d.attributes', 'attributes')
            ->andWhere('attributes.attribute = :isGradeLevels')
            ->andWhere("attributes.value = 'yes'")
            ->orderBy('i.rank', 'ASC')
            ->addOrderBy('i.listEnumInSource', 'ASC')
            ->addOrderBy('i.humanCodingScheme', 'ASC')
            ->setParameters([
                'isChild' => LsAssociation::CHILD_OF,
                'isGradeLevels' => LsDocAttribute::IS_GRADE_LEVELS
            ])
            ;
    }
}
